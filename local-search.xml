<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>数据库期末模拟测试</title>
    <link href="/blog/2020/12/14/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9C%9F%E6%9C%AB%E6%A8%A1%E6%8B%9F%E6%B5%8B%E8%AF%95/"/>
    <url>/blog/2020/12/14/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9C%9F%E6%9C%AB%E6%A8%A1%E6%8B%9F%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<p>数据库期末模拟测试</p><a id="more"></a><h2 id="一、简答题"><a href="#一、简答题" class="headerlink" title="一、简答题"></a>一、简答题</h2><h3 id="1-简述事务所具有的ACID特性。"><a href="#1-简述事务所具有的ACID特性。" class="headerlink" title="1.简述事务所具有的ACID特性。"></a>1.简述事务所具有的ACID特性。</h3><blockquote><p>事务：用户的操作由一系列数据库操作组成的，这一系列操作应该作为整体执行，要么全部执行，要么全部不执行。</p><ol><li><strong>A：原子性</strong>（Atomic）<br>事务的操作作为整体执行，要么全部执行，要么全部失败</li><li><strong>C：一致性</strong>（Consistency）<br>数据在事务执行之前和执行之后，处于一致状态</li><li><strong>I：隔离性</strong>（Isolation）<br>多个事务之间是隔离的，互不影响</li><li><strong>D：持久性</strong>（Durability）<br>一旦事务提交了，对数据库的修改是永久性的</li></ol></blockquote><h3 id="2-登记日志文件时为什么必须先写日志文件，后写数据库？"><a href="#2-登记日志文件时为什么必须先写日志文件，后写数据库？" class="headerlink" title="2.登记日志文件时为什么必须先写日志文件，后写数据库？"></a>2.登记日志文件时为什么必须先写日志文件，后写数据库？</h3><blockquote><p>先写日志文件为保证数据库的可恢复性，日志文件能够用来进行事务故障恢复、系统故障恢复，并能够协助后备副本进行介质故障恢复。当数据库文件毁坏后，可重新装入后备副本把数据库恢复到转储结束时刻的正确状态，再利用建立的日志文件，可以把已完成的事务进行重做处理，而对于故障发生时尚未完成的事务则进行撤消处理，这样不用运行应用程序就可把数据库恢复到故障前某一时刻的正确状态。</p></blockquote><h3 id="3-什么是数据字典？数据字典的作用是什么？"><a href="#3-什么是数据字典？数据字典的作用是什么？" class="headerlink" title="3.什么是数据字典？数据字典的作用是什么？"></a>3.什么是数据字典？数据字典的作用是什么？</h3><blockquote><p>数据字典是指对数据的数据项、数据结构、数据流、数据存储、处理逻辑等进行定义和描述，其目的是对数据流程图中的各个元素做出详细的说明，使用数据字典为简单的建模项目。</p></blockquote><h3 id="4-并发操作会产生几种不一致情况-用什么方法避免各种不一致的情况？"><a href="#4-并发操作会产生几种不一致情况-用什么方法避免各种不一致的情况？" class="headerlink" title="4.并发操作会产生几种不一致情况?用什么方法避免各种不一致的情况？"></a>4.并发操作会产生几种不一致情况?用什么方法避免各种不一致的情况？</h3><blockquote><ol><li><strong>丢失数据修改</strong><br>两个事务T<del>1</del>和T<del>2</del>读入同一个数据并修改，T<del>2</del>提交的结果破坏了T<del>1</del>提交的结果，导致了T<del>1</del>的修改被丢失</li><li><strong>不可重复读</strong><br>事务T<del>1</del>读取数据后，事务T<del>2</del>执行更新操作，使T<del>1</del>无法再现前一次读取的结果。</li><li><strong>读脏数据</strong><br>读“脏”数据指的是事务T<del>1</del>修改了某一数据，并将其写回磁盘，事务T<del>2</del>读取某一数据后，T<del>1</del>由于某种原因撤销了操作，恢复原值，这时T<del>2</del>读到的数据就和数据库中的数据不一致，称为读“脏”数据。</li><li><strong>产生幽灵数据</strong><br>当事务T<del>1</del>从数据库中读取了某些记录，事务T<del>2</del>删除了其中部分记录，或者添加了一些记录，T<del>1</del>再次读取时，会少或者多一些数据，这些数据对T<del>1</del>即为幽灵数据。</li></ol></blockquote><blockquote><p>主要用<strong>封锁技术</strong>来避免不一致的情况。</p></blockquote><h3 id="5-为什么要设立日志文件"><a href="#5-为什么要设立日志文件" class="headerlink" title="5.为什么要设立日志文件?"></a>5.为什么要设立日志文件?</h3><blockquote><ol><li>日志文件是用来记录事务对数据库的更新操作的文件。</li><li>设立日志文件的目的是： 进行事务故障恢复；进行系统故障恢复；协助后备副本进行介质故障恢复。</li></ol></blockquote><h3 id="6-试述查询优化的一般步骤。"><a href="#6-试述查询优化的一般步骤。" class="headerlink" title="6.试述查询优化的一般步骤。"></a>6.试述查询优化的一般步骤。</h3><blockquote><ol><li>把查询转换成某种内部表示，通常用的内部表示是语法树。 </li><li>把语法树转换成标准（优化）形式。即利用优化算法，把原始的语法树转换成优化的形式。 </li><li>选择低层的存取路径。 </li><li>生成查询计划，选择代价最小的。</li></ol></blockquote><h2 id="二、应用题"><a href="#二、应用题" class="headerlink" title="二、应用题"></a>二、应用题</h2><h3 id="7-设有下列四个关系模式："><a href="#7-设有下列四个关系模式：" class="headerlink" title="7.设有下列四个关系模式："></a>7.设有下列四个关系模式：</h3><pre><code> S（SNO，SNAME，CITY） P（PNO，PNAME，COLOR，WEIGHT） J（JNO，JNAME，CITY） SPJ（SNO，PNO，JNO，QTY）</code></pre><p>其中，供应商表S由供应商号（SNO）、供应商姓名（SNAME）、供应商所在城市（CITY）组成，记录各个供应商的情况；零件表P由零件号（PNO）、零件名称（PNAME）、零件颜色（COLOR）、零件重量（WEIGHT）组成，记录各种零件的情况；工程项目表J由项目号（JNO）、项目名（JNAME）、项目所在城市（CITY）组成，记录各个工程项目的情况；供应情况表SPJ由供应商号（SNO）、零件号（PNO）、项目号（JNO）、供应数量（QTY）组成，记录各供应商供应各种零件给各工程项目的数量。分别用SQL语言完成下列查询：<br>(1)求供应工程项目号为J1工程零件的供应商号SNO；<br>(2)求供应工程项目号为J1工程零件号为P1的供应商号SNO；<br>(3)求供应工程项目号为J1工程红色零件的供应商号SNO；<br>(4)求至少使用天津供应商生产的红色零件的工程号JNO；<br>(5)求至少用了S1供应商所供应的全部零件的工程号JNO；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs SQL">(1) <span class="hljs-keyword">SELECT</span> SNO <span class="hljs-keyword">FROM</span> SPJ<br>        <span class="hljs-keyword">WHERE</span> JNO=<span class="hljs-string">&#x27;J1&#x27;</span><br><br>(<span class="hljs-number">2</span>) <span class="hljs-keyword">SELECT</span> SNO <span class="hljs-keyword">FROM</span> SPJ<br>        <span class="hljs-keyword">WHERE</span> JNO=<span class="hljs-string">&#x27;J1&#x27;</span> <span class="hljs-keyword">AND</span> PNO=<span class="hljs-string">&#x27;P1&#x27;</span><br><br>(<span class="hljs-number">3</span>) <span class="hljs-keyword">SELECT</span> SNO <span class="hljs-keyword">FROM</span> SPJ<br>        <span class="hljs-keyword">WHERE</span> JNO=<span class="hljs-string">&#x27;J1&#x27;</span> <span class="hljs-keyword">AND</span> PNO <span class="hljs-keyword">IN</span>(<br>            <span class="hljs-keyword">SELECT</span> PNO <span class="hljs-keyword">FROM</span> P<br>                <span class="hljs-keyword">WHERE</span> COLOR=<span class="hljs-string">&#x27;红&#x27;</span><br>        )<br><br>(<span class="hljs-number">4</span>) <span class="hljs-keyword">SELECT</span> JNO <span class="hljs-keyword">FROM</span> SPJ<br>        <span class="hljs-keyword">WHERE</span> SNO <span class="hljs-keyword">IN</span>(<br>            <span class="hljs-keyword">SELECT</span> SNO <span class="hljs-keyword">FROM</span> S<br>                <span class="hljs-keyword">WHERE</span> CITY=<span class="hljs-string">&#x27;天津&#x27;</span><br>        )<span class="hljs-keyword">AND</span> PNO <span class="hljs-keyword">IN</span>(<br>            <span class="hljs-keyword">SELECT</span> PNO <span class="hljs-keyword">FROM</span> P<br>                <span class="hljs-keyword">WHERE</span> COLOR=<span class="hljs-string">&#x27;红&#x27;</span><br>        )<br><br>(<span class="hljs-number">5</span>) <span class="hljs-keyword">SELECT</span> JNO <span class="hljs-keyword">FROM</span> SPJ<br>        <span class="hljs-keyword">WHERE</span> SNO=<span class="hljs-string">&#x27;S1&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="8-设有下列关系模式："><a href="#8-设有下列关系模式：" class="headerlink" title="8.设有下列关系模式："></a>8.设有下列关系模式：</h3><pre><code>STUDENT（NO，NAME，SEX，BIRTHDAY，CLASS）TEACHER（NO，NAME，SEX，BIRTHDAY，PROF，DEPART）COURSE（CNO，CNAME，TNO）SCORE（NO，CNO，DEGREE）</code></pre><p>其中，学生信息表STUDENT由学号（NO）、学生姓名（NAME）、性别（SEX）、出生年月日（BIRTHDAY）、班级（CLASS）组成，记录学生的情况；教师信息表TEACHER由教师号（NO）、教师姓名（NAME）、性别（SEX）、出生年月日（BIRTHDAY）、职称（FROF）、教师所在系（DEPART）组成，记录教师的情况；课程表COURSE由课程号（CNO）、课程名称（CNAME）、任课教师号（TNO）组成，记录所开课程及任课教师情况；成绩表SCORE由学生学号（NO）、课程号（CNO）、成绩（DEGREE）组成，记录学生选课情况及相应的成绩。用SQL语句实现以下操作<br>(1)显示STUDENT表中每个学生的姓名和出生日期。<br>(2)显示STUDENT表中所有姓“王”的学生记录。<br>(3)显示成绩表中成绩在60分到80分之间的所有记录。<br>(4)显示“男”教师及其所上的课程。（显示该教师的姓名和所上的课程名)<br>(5)选出和“李军”同学同性别并同班的学生姓名。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs SQL">(1) <span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">NAME</span>,BIRTHDAY <span class="hljs-keyword">FROM</span> STUDENT<br><br>(<span class="hljs-number">2</span>) <span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> STUDENT<br>        <span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">NAME</span> <span class="hljs-keyword">LIKE</span> <span class="hljs-string">&#x27;王%&#x27;</span><br><br>(<span class="hljs-number">3</span>) <span class="hljs-keyword">SELECT</span> DEGREE <span class="hljs-keyword">FROM</span> SCORE<br>        <span class="hljs-keyword">WHERE</span> DEGREE <span class="hljs-keyword">BETWEEN</span> <span class="hljs-number">60</span> <span class="hljs-keyword">AND</span> <span class="hljs-number">80</span><br><br>(<span class="hljs-number">4</span>) <span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">NAME</span>,CNAME <span class="hljs-keyword">FROM</span> TEACHER,COURSE<br>        <span class="hljs-keyword">WHERE</span> TEACHER.NO=COURSE.TNO <span class="hljs-keyword">AND</span> SEX=<span class="hljs-string">&#x27;男&#x27;</span><br><br>(<span class="hljs-number">5</span>) <span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">NAME</span> <span class="hljs-keyword">FROM</span> STUDENT<br>        <span class="hljs-keyword">WHERE</span> SEX <span class="hljs-keyword">IN</span>(<br>            <span class="hljs-keyword">SELECT</span> SEX <span class="hljs-keyword">FROM</span> STUDENT <br>                <span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">NAME</span>=<span class="hljs-string">&#x27;李军&#x27;</span><br>        )<span class="hljs-keyword">AND</span> <span class="hljs-keyword">CLASS</span> <span class="hljs-keyword">IN</span>(<br>            <span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">CLASS</span> <span class="hljs-keyword">FROM</span> STUDENT <br>                <span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">NAME</span>=<span class="hljs-string">&#x27;李军&#x27;</span><br>        )<br></code></pre></td></tr></table></figure><h2 id="三、综合题"><a href="#三、综合题" class="headerlink" title="三、综合题"></a>三、综合题</h2><h3 id="9-设某工商业集团数据库有3个实体集。"><a href="#9-设某工商业集团数据库有3个实体集。" class="headerlink" title="9.设某工商业集团数据库有3个实体集。"></a>9.设某工商业集团数据库有3个实体集。</h3><p>一是“商品”实体集，属性有商品号、商品名、规格、单价等；二是“商店”实体集，属性有商店号、商店名、地址等；三是“供应商”实体集，属性有供应商编号、供应商名、地址等。供应商与商品之间存在“供应”关系，每个供应商可供应多种商品，每种商品可向多个供应商订购，每个供应商供应每种商品有个月供应量；商店与商品间存在“销售”联系，每个商店可销售多种商品，每种商品可在多个商店销售，每个商店销售每种商品有个月计划数。<br>(1) 试画出ER图，并在图上注明属性、联系的类型。<br>(2) 将ER图转换成关系模式集，并指出每个关系模式的主键和外键。</p><h5 id="9-答："><a href="#9-答：" class="headerlink" title="9.答："></a>9.答：</h5><p>(1)<br><img src="https://cdn.jsdelivr.net/gh/linmurou/XiaoYangDeImgs/img/20201214205204.png" alt="ER图"></p><p>(2)<br>商店(<u>商店号</u>，商店名，地址)。<br>商品(<u>商品号</u>，商品名，规格，单价)。<br>供应商(<u>供应商编号</u>，供应商名，地址) 。<br>销售(<u>商品号</u>，<u>商店号</u>，月计划数)，其中，”商品号”为引用”商品”关系模式的外码，”商店号”为引用”商店”关系模式的外码。<br>供应(<u>商品号</u>，<u>供应商编号</u>，月供应量)，其中，”商品号”为引用”商品”关系模式的外码，”供应商编号”为引用”供应商”关系模式的外码。</p><h3 id="10-设有如下所示的关系R-主码为：课程名-。"><a href="#10-设有如下所示的关系R-主码为：课程名-。" class="headerlink" title="10.设有如下所示的关系R(主码为：课程名)。"></a>10.设有如下所示的关系R(主码为：课程名)。</h3><p><img src="https://cdn.jsdelivr.net/gh/linmurou/XiaoYangDeImgs/img/20201214205652.png" alt="关系R"><br>(1) 该关系模式为第几范式？为什么？<br>(2) 是否存在删除操作异常？若存在，则说明在什么情况下发生的？<br>(3) 将它分解为高一级范式，分解后的关系是如何解决分解前可能存在的删除操作异常问题的？</p><h5 id="10-答："><a href="#10-答：" class="headerlink" title="10.答："></a>10.答：</h5><blockquote><p>(1) 第二范式。因为关系R不包含重复组的关系，首先是第一范式，其次，关系R不存在非主码属性对主码的部分函数依赖，所以它也是第二范式，但教师名依赖于课程名，教师地址又依赖于教师名，所以教师地址依赖于课程名，存在传递函数依赖，所以它不是第三范式，所以关系R为第二范式。<br>(2) 存在。当删除某门课程时，会删除掉不该删除的教师的有关信息。<br>(3) 分解后的关系：<img src="https://cdn.jsdelivr.net/gh/linmurou/XiaoYangDeImgs/img/20201214211705.png" alt="分解后的关系R"><br>分解后，若对课程进行删除操作，仅对R1进行操作，而教师信息仍然会保留在R2中，解决了删除操作异常问题。</p></blockquote><hr>]]></content>
    
    
    
    <tags>
      
      <tag>数据库</tag>
      
      <tag>期末</tag>
      
      <tag>测试</tag>
      
      <tag>模拟测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GitHub图床访问速度受限解决方法</title>
    <link href="/blog/2020/12/11/GitHub%E5%9B%BE%E5%BA%8A%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6%E5%8F%97%E9%99%90%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <url>/blog/2020/12/11/GitHub%E5%9B%BE%E5%BA%8A%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6%E5%8F%97%E9%99%90%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h3 id="关于GitHub图床访问速度受限的解决方法"><a href="#关于GitHub图床访问速度受限的解决方法" class="headerlink" title="关于GitHub图床访问速度受限的解决方法"></a>关于GitHub图床访问速度受限的解决方法</h3><a id="more"></a><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><h4 id="1-一个现成的GitHub仓库-充当图床的仓库"><a href="#1-一个现成的GitHub仓库-充当图床的仓库" class="headerlink" title="1. 一个现成的GitHub仓库(充当图床的仓库)"></a>1. 一个现成的GitHub仓库(充当图床的仓库)</h4><h4 id="2-PicGo"><a href="#2-PicGo" class="headerlink" title="2. PicGo"></a>2. PicGo</h4><p>怎么<a href="https://github.com/Molunerfinn/PicGo/releases">下载PicGo</a>，亦或者是<a href="https://www.cnblogs.com/ly-2019/p/11828790.html">怎么使用PicGo+GitHub创建个人图床</a>，可以自行摸索。</p><h5 id="我主要想说明解决的问题是在使用GitHub图床时，图片有时会因为访问速度原因加载不出的解决方法。"><a href="#我主要想说明解决的问题是在使用GitHub图床时，图片有时会因为访问速度原因加载不出的解决方法。" class="headerlink" title="我主要想说明解决的问题是在使用GitHub图床时，图片有时会因为访问速度原因加载不出的解决方法。"></a>我主要想说明解决的问题是在使用GitHub图床时，图片有时会因为访问速度原因加载不出的解决方法。</h5><h5 id="在使用PicGo-GitHub创建图床的时候，你会使用如下的设置页面"><a href="#在使用PicGo-GitHub创建图床的时候，你会使用如下的设置页面" class="headerlink" title="在使用PicGo+GitHub创建图床的时候，你会使用如下的设置页面"></a>在使用PicGo+GitHub创建图床的时候，你会使用如下的设置页面</h5><p><img src="https://cdn.jsdelivr.net/gh/linmurou/XiaoYangDeImgs/img/%E5%9B%BE%E5%BA%8A%E8%AE%BE%E7%BD%AE.png" alt="PicGo的GitHub图床设置"></p><h5 id="原先设置自定义域名时，设置的是-https-raw-githubusercontent-com-用户名-仓库名-分支名，然后生成的链接会是自定义域名-图片名称-后缀形成的图片的url，但因为这样形成的url会如题所说因为访问速度受限加载不出来，所以要整个CDN加速。"><a href="#原先设置自定义域名时，设置的是-https-raw-githubusercontent-com-用户名-仓库名-分支名，然后生成的链接会是自定义域名-图片名称-后缀形成的图片的url，但因为这样形成的url会如题所说因为访问速度受限加载不出来，所以要整个CDN加速。" class="headerlink" title="原先设置自定义域名时，设置的是 https://raw.githubusercontent.com/用户名/仓库名/分支名，然后生成的链接会是自定义域名+图片名称+后缀形成的图片的url，但因为这样形成的url会如题所说因为访问速度受限加载不出来，所以要整个CDN加速。"></a>原先设置自定义域名时，设置的是 <code>https://raw.githubusercontent.com/用户名/仓库名/分支名</code>，然后生成的链接会是自定义域名+图片名称+后缀形成的图片的url，但因为这样形成的url会如题所说因为访问速度受限加载不出来，所以要整个CDN加速。</h5><h5 id="使用的是-jsdeliver-的CDN加速，不为啥，因为免费。"><a href="#使用的是-jsdeliver-的CDN加速，不为啥，因为免费。" class="headerlink" title="使用的是 jsdeliver 的CDN加速，不为啥，因为免费。"></a>使用的是 jsdeliver 的CDN加速，不为啥，因为免费。</h5><h4 id="具体的使用方法"><a href="#具体的使用方法" class="headerlink" title="具体的使用方法"></a>具体的使用方法</h4><h5 id="只需要将你上图所示的图床设置中的自定义域名修改为https-cdn-jsdelivr-net-gh-你的用户名-仓库名就行了。"><a href="#只需要将你上图所示的图床设置中的自定义域名修改为https-cdn-jsdelivr-net-gh-你的用户名-仓库名就行了。" class="headerlink" title="只需要将你上图所示的图床设置中的自定义域名修改为https://cdn.jsdelivr.net/gh/你的用户名/仓库名就行了。"></a>只需要将你上图所示的图床设置中的自定义域名修改为<code>https://cdn.jsdelivr.net/gh/你的用户名/仓库名</code>就行了。</h5><hr>]]></content>
    
    
    
    <tags>
      
      <tag>GitHub图床</tag>
      
      <tag>图床CDN加速</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>与数据库的连接</title>
    <link href="/blog/2020/12/11/%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E8%BF%9E%E6%8E%A5/"/>
    <url>/blog/2020/12/11/%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E8%BF%9E%E6%8E%A5/</url>
    
    <content type="html"><![CDATA[<h3 id="关于Java中连接数据库的一些踩过的坑"><a href="#关于Java中连接数据库的一些踩过的坑" class="headerlink" title="关于Java中连接数据库的一些踩过的坑"></a>关于Java中连接数据库的一些踩过的坑</h3><a id="more"></a><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote><p>数据库中的什么账户建立，SQLServer验证登录都应该是不会出错的，主要出错的地方一般都是中间一步，接下来就来看看。</p></blockquote><h4 id="关于连接数据库时的一些配置"><a href="#关于连接数据库时的一些配置" class="headerlink" title="关于连接数据库时的一些配置"></a>关于连接数据库时的一些配置</h4><h6 id="检查驱动包版本"><a href="#检查驱动包版本" class="headerlink" title="检查驱动包版本"></a>检查驱动包版本</h6><p>我自己也是在驱动包版本上被坑了，这点尤为重要，检查自己的SQLServer的version和JDK的version然后选择相对应version的驱动包，这点应该是出错率最高的了。</p><h6 id="SQLServer配置管理器的配置"><a href="#SQLServer配置管理器的配置" class="headerlink" title="SQLServer配置管理器的配置"></a>SQLServer配置管理器的配置</h6><ol><li>启用TCP/IP服务</li></ol><p>如图所示启用TCP/IP服务和Named Pipes服务<br><img src="https://cdn.jsdelivr.net/gh/linmurou/XiaoYangDeImgs/img/QQ%E5%9B%BE%E7%89%8720201211195350.png" alt="启用TCP/IP服务"></p><ol start="2"><li>进行IP及端口设置</li></ol><p>右键点击上一步的<strong>TCP/IP</strong>项，然后在新弹出的窗口上方选择<strong>IP地址</strong>栏，进入后进行相关配置，将<strong>IP1</strong>和<strong>IP10</strong>的<strong>IP地址</strong>设置为<strong>127.0.0.1</strong>，然后将所有项的<strong>已启用</strong>项设置为是，并将<strong>IP1</strong>、<strong>IP10</strong>和最下方的<strong>IPAll</strong>的<strong>TCP端口</strong>设置为<strong>1433</strong>，配置完成后如图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/linmurou/XiaoYangDeImgs/img/20201211203355.png" alt="IP及端口设置"><br><img src="https://cdn.jsdelivr.net/gh/linmurou/XiaoYangDeImgs/img/20201211203510.png" alt="IP及端口设置"></p><ol start="3"><li>进行测试</li></ol><p>命令行窗口输入</p><blockquote><p>telnet 127.0.0.1 1433</p></blockquote><p>测试窗口如图所示：<br><img src="https://cdn.jsdelivr.net/gh/linmurou/XiaoYangDeImgs/img/20201211203904.png" alt="测试1433端口"></p><p>测试成功如图所示：<br><img src="https://cdn.jsdelivr.net/gh/linmurou/XiaoYangDeImgs/img/20201211203904.png" alt="测试成功"></p><p>(如何开启telnet服务请自行百度)<br>测试成功则说明成功，不成功则重新检查一遍易错点。</p><hr><h6 id="其实易错点还是那个驱动包的版本问题，版本问题解决了，其余的其实都是小事。"><a href="#其实易错点还是那个驱动包的版本问题，版本问题解决了，其余的其实都是小事。" class="headerlink" title="其实易错点还是那个驱动包的版本问题，版本问题解决了，其余的其实都是小事。"></a>其实易错点还是那个驱动包的版本问题，版本问题解决了，其余的其实都是小事。</h6>]]></content>
    
    
    
    <tags>
      
      <tag>数据库</tag>
      
      <tag>数据库连接</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
